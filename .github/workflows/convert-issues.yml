name: Convert GitHub Issues to Markdown
on:
  workflow_dispatch:
jobs:
  convert:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Fetch and Convert Issues
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          python3 - <<EOF
          import requests
          import base64
          import os
          import json
          
          headers = {
              "Authorization": f"Bearer {os.environ['GITHUB_TOKEN']}",
              "Accept": "application/vnd.github.v3+json"
          }
          repo = "Rollofthedice2/bioanalytics-spiral-data"
          issues_url = f"https://api.github.com/repos/{repo}/issues"
          contents_url = f"https://api.github.com/repos/{repo}/contents/reflections"
          
          print("🔍 Fetching issues from:", issues_url)
          response = requests.get(issues_url, headers=headers)
          issues = response.json()
          
          for issue in issues:
              number = issue["number"]
              title = issue["title"].replace(" ", "-").lower()
              filename = f"issue-{number}-{title}.md"
              content = f"# {issue['title']}\n\n{issue['body']}"
              b64_content = base64.b64encode(content.encode()).decode()
              file_url = f"{contents_url}/{filename}"
              print(f"📄 Creating: {filename}")
              
              data = {
                  "message": f"Add reflection: {filename}",
                  "content": b64_content,
                  "branch": "main"
              }
              
              create_response = requests.put(file_url, headers=headers, json=data)
              print(f"✅ Created: {filename} – Status: {create_response.status_code}")
              if create_response.status_code >= 300:
                  print(create_response.json())
          EOF
